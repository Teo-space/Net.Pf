@page
@model Net.Pf.Pages.AdminPanel.Users.IndexModel
@{
}



<h3>Users:</h3>

<table class="table table-bordered table-striped table-hover">


    <thead class="table-dark">
        <tr>
            <th scope="col">#</th>
            <th scope="col">UserName</th>
            <th scope="col">Detailing</th>

            <th scope="col">Add Claim</th>
            <th scope="col">Delete Claim</th>

            <th scope="col">Add to Role</th>
            <th scope="col">Delete From Role</th>

        </tr>
    </thead>



    <tbody>
        @for (int i = 0; i < @Model.OnGetUsers.Count; i++)
        {
            var row = @Model.OnGetUsers[i];

            <tr>
                <th scope="row">@i</th>
                <td>@row.UserName</td>

                <td><a asp-page="/AdminPanel/Users/Profile" asp-route-UserId=@row.Id target="_blank">Detailing</a></td>



                <td>
                    <div class="dropdown">

                        <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Add Claim</button>

                        <ul class="dropdown-menu">
                            @foreach (var claim in Enum.GetNames(typeof(UserClaims))
                           .Where(x => x != UserClaims.Administrator.ToString())
                           .ToList())
                            {
                                <li>
                                    <form class="form-group" method="post" asp-page="ClaimsManager" asp-page-handler="AddClaimToUser">
                                        <input type="text" class="form-control" name="UserId" value="@row.Id" hidden>
                                        <input type="text" class="form-control" name="claimType" value="@claim" hidden>
                                        <input type="text" class="form-control" name="claimValue" value="@claim" hidden>
                                        <button class="btn btn-link dropdown-item" type="submit">@claim</button>
                                    </form>
                                </li>
                            }
                        </ul>

                    </div>

                </td>



                <td>
                    <div class="dropdown">

                        <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Delete Claim</button>

                        <ul class="dropdown-menu">
                            @foreach (var claim in Enum.GetNames(typeof(UserClaims))
                           .Where(x => x != UserClaims.Administrator.ToString())
                           .ToList())
                            {
                                <li>
                                    <form class="form-group" method="post" asp-page="ClaimsManager" asp-page-handler="DeleteClaimFromUser">
                                        <input type="text" class="form-control" name="UserId" id="UserId" value="@row.Id" hidden>
                                        <input type="text" class="form-control" name="claimType" id="claimType" value="@claim" hidden>
                                        <button class="btn btn-link dropdown-item" type="submit">@claim</button>
                                    </form>
                                </li>
                            }
                        </ul>

                    </div>

                </td>




                <td>
                    <div class="dropdown">

                        <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Add To Role</button>

                        <ul class="dropdown-menu">
                            @foreach (var role in Enum.GetNames(typeof(UserRoles))
                           .Where(x => x != UserClaims.Administrator.ToString())
                           .ToList())
                            {
                                <li>
                                    <form class="form-group" method="post" asp-page="RoleManager" asp-page-handler="AddUserToRole">
                                        <input type="text" class="form-control" name="UserId" id="UserId" value="@row.Id" hidden>
                                        <input type="text" class="form-control" name="RoleName" id="RoleName" value="@role" hidden>
                                        <button class="btn btn-link dropdown-item" type="submit">@role</button>
                                    </form>
                                </li>
                            }
                        </ul>

                    </div>

                </td>



                <td>
                    <div class="dropdown">

                        <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">Delete from Role</button>

                        <ul class="dropdown-menu">
                            @foreach (var role in Enum.GetNames(typeof(UserRoles))
                           .Where(x => x != UserClaims.Administrator.ToString())
                           .ToList())
                            {
                                <li>
                                    <form class="form-group" method="post" asp-page="RoleManager" asp-page-handler="DeleteUserFromRole">
                                        <input type="text" class="form-control" name="UserId" id="UserId" value="@row.Id" hidden>
                                        <input type="text" class="form-control" name="RoleName" id="RoleName" value="@role" hidden>
                                        <button class="btn btn-link dropdown-item" type="submit">@role</button>
                                    </form>
                                </li>
                            }
                        </ul>

                    </div>

                </td>


            </tr>
        }
    </tbody>
</table>

